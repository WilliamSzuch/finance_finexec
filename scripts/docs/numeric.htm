<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>numeric.ijs</title>
  <style>
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    .display.math{display: block; text-align: center; margin: 0.5rem auto;}
  </style>
  <link rel="stylesheet" href="joxygen.css" />
  <!--[if lt IE 9]>
    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js"></script>
  <![endif]-->
</head>
<body>
<header id="title-block-header">
<h1 class="title">numeric.ijs</h1>
</header>
<hr>
<a href="http://www.finexec.com.au" target="_blank">Finexec | </a> <a class="HREF" href="../../finexec_doc.html" target="_blank">Documentation | </a> <a class="HREF" href="../../finexec_cat.html" target="_blank">Category | </a> <a class="HREF" href="index.htm" target="_blank">Toolbox</a>
<hr>
<div class="line-block">Script: ~addons/finance/finexec/toolbox/numeric.ijs<br />
Contributor: William Szuch<br />
Updated: 27/2/2021<br />
Depend: nil<br />
Definitions: loaded to locale base<br />
Status: done<br />
<a href="../numeric.ijs" target="_blank">Script source: numeric.ijs</a></div>
<hr>
<div class="line-block">Numeric utilities.</div>
<hr>
<h2>Definitions</h2>
<table class="map">
<tr>
<td class="key">
B
</td>
<td>
<a href="#bdiff">bdiff</a>
</td>
</tr>
<tr>
<td class="key">
D
</td>
<td>
<a href="#dp">dp</a>
</td>
</tr>
<tr>
<td class="key">
F
</td>
<td>
<a href="#fdiff">fdiff</a>
</td>
</tr>
<tr>
<td class="key">
I
</td>
<td>
<a href="#ip">ip</a>, <a href="#ip1">ip1</a>, <a href="#ip_1">ip_1</a>, <a href="#ipneg1">ipneg1</a>, <a href="#ipneg_1">ipneg_1</a>
</td>
</tr>
<tr>
<td class="key">
L
</td>
<td>
<a href="#log1y">log1y</a>
</td>
</tr>
<tr>
<td class="key">
O
</td>
<td>
<a href="#onesd">onesd</a>
</td>
</tr>
<tr>
<td class="key">
R
</td>
<td>
<a href="#round">round</a>
</td>
</tr>
<tr>
<td class="key">
S
</td>
<td>
<a href="#signchange">signchange</a>
</td>
</tr>
</table>
<h2 class="hdef" id="bdiff">bdiff (monad)</h2>
<div class="line-block"><b>Type:</b> tacit</div>
<p>Calculate the backward difference in a list of numbers.</p>
<h3>Syntax</h3>
<pre><code>bdiff(L)
L = list of numbers</code></pre>
<h3>Example</h3>
<pre><code>  bdiff(i. 12)
_1 _1 _1 _1 _1 _1 _1 _1 _1 _1 _1</code></pre>
<pre><code>  bdiff(0 2 1 3 12.1)
_2 1 _2 _9.1</code></pre>
<h2 class="hdef" id="dp">dp (monad)</h2>
<div class="line-block"><b>Type:</b> tacit<br />
Get the decimal part of a positive number.</div>
<h3>Syntax</h3>
<pre><code>ip(N)
N = positive number</code></pre>
<h3>Example</h3>
<pre><code>   dp(12.12)
0.12</code></pre>
<pre><code>   dp(12)
0</code></pre>
<pre><code>  dp(0 1.1 123.5)
0 0.1 0.5</code></pre>
<h2 class="hdef" id="fdiff">fdiff (monad)</h2>
<div class="line-block"><b>Type:</b> tacit<br />
Calculate the forward difference in a list of numbers.</div>
<h3>Syntax</h3>
<pre><code>fdiff(L)
L = list of numbers</code></pre>
<h3>Example</h3>
<pre><code>  fdiff(i. 12)
1 1 1 1 1 1 1 1 1 1 1</code></pre>
<pre><code>  fdiff(0 2 1 3 12.1)
2 _1 2 9.1</code></pre>
<h2 class="hdef" id="ip">ip (monad)</h2>
<div class="line-block"><b>Type:</b> tacit<br />
Get the integer part of a positive number.</div>
<h3>Syntax</h3>
<pre><code>ip(N)
N = positive number</code></pre>
<h3>Example</h3>
<pre><code>   ip(12.12)
12</code></pre>
<pre><code>   ip(12)
12</code></pre>
<pre><code>  ip(0 1.1 123.5)
0 1 123</code></pre>
<h2 class="hdef" id="ip1">ip1 (monad)</h2>
<div class="line-block"><b>Type:</b> tacit<br />
Get the integer part of a positive number plus 1.</div>
<h3>Syntax</h3>
<pre><code>ip1(N)
N = positive number</code></pre>
<h3>Example</h3>
<pre><code>   ip1(12.12)
13</code></pre>
<pre><code>   ip1(12)
13</code></pre>
<h2 class="hdef" id="ip_1">ip_1 (monad)</h2>
<div class="line-block"><b>Type:</b> tacit<br />
Get the integer part of a positive number less 1.</div>
<h3>Syntax</h3>
<pre><code>ip_1(N)
N = positive number</code></pre>
<h3>Example</h3>
<pre><code>   ip_1(12.12)
11</code></pre>
<pre><code>   ip_1(12)
11</code></pre>
<h2 class="hdef" id="ipneg1">ipneg1 (monad)</h2>
<div class="line-block"><b>Type:</b> tacit<br />
Get the integer part of a negative number plus 1.</div>
<h3>Syntax</h3>
<pre><code>ipneg1(N)
N = negative number</code></pre>
<h3>Example</h3>
<pre><code>   ipneg1(_12.12)
_11</code></pre>
<pre><code>   ipneg1(_12)
_11</code></pre>
<h2 class="hdef" id="ipneg_1">ipneg_1 (monad)</h2>
<div class="line-block"><b>Type:</b> tacit<br />
Get the integer part of a negative number less 1.</div>
<h3>Syntax</h3>
<pre><code>ipneg_1(N)
N = negative number</code></pre>
<h3>Example</h3>
<pre><code>   ipneg_1(_12.12)
_13</code></pre>
<pre><code>   ipneg_1(_12)
_13</code></pre>
<h2 class="hdef" id="log1y">log1y (monad)</h2>
<div class="line-block"><b>Type:</b> tacit</div>
<p>Calculate the log of (1+N) to the base e.</p>
<h3>Syntax</h3>
<pre><code>log1y(N)
N = number</code></pre>
<h3>Example</h3>
<pre><code>   log1y(12.1)
2.57261</code></pre>
<pre><code>   log1y(_0.999)
_6.90776</code></pre>
<pre><code>   log1y(1 0 _0.9999)
0.693147 0 _9.21034</code></pre>
<pre><code>   log1y(_10)
2.19722j3.14159</code></pre>
<h2 class="hdef" id="onesd">onesd (monad)</h2>
<div class="line-block"><b>Type:</b> tacit<br />
Create a list of the number of ones in the integer part<br />
of a positive and catenate the decimal part.</div>
<h3>Syntax</h3>
<pre><code>onesd(N)
N = number</code></pre>
<h3>Example</h3>
<pre><code>   onesd(12.12)
1 1 1 1 1 1 1 1 1 1 1 1 0.12</code></pre>
<pre><code>   onesd(12)
1 1 1 1 1 1 1 1 1 1 1 1 0</code></pre>
<h2 class="hdef" id="round">round (dyad)</h2>
<div class="line-block"><b>Type:</b> tacit<br />
Round Y to nearest X</div>
<h3>Syntax</h3>
<pre><code>(X)round(Y)
Y = number to be rounded
X = number nearest to be rounded</code></pre>
<h3>Example</h3>
<pre><code> (0.01)round(12.123)
12.12</code></pre>
<div class="line-block">Â (1)round(12.123 _12.123 10.1)</div>
<pre><code>12 _12 10</code></pre>
<pre><code> (10)round(12.123 _12.123 10.1 15.1)
10 _10 10 20</code></pre>
<h2 class="hdef" id="signchange">signchange (monad)</h2>
<div class="line-block"><b>Type:</b> tacit<br />
Show if there is a change of sign in between two numbers.<br />
result = 1 if change of sign.<br />
result = _1 if no change of sign.<br />
result = 0 if either number = 0.</div>
<h3>Syntax</h3>
<pre><code>signchange(A,B) or
signchange(A;B) Boxed
A = number
B = number</code></pre>
<h3>Example</h3>
<pre><code>   signchange(12,13)
_1</code></pre>
<pre><code>   signchange(12;_12)
1</code></pre>
<pre><code>   signchange(12,12)
_1</code></pre>
<pre><code>   signchange(0,12)
0</code></pre>
</body>
</html>
